[package]
name = "redisxann"
version = "0.1.0"
authors = ["weedge <weege007@gmail.com>"]
edition = "2021"
publish = ["git"]
#build = "build.rs"
description = "building Redis x ANN modules in Rust"
license = "MIT"
repository = "https://github.com/weedge/redisxann"
keywords = ["redis", "ann"]
categories = ["database"]
exclude = [".gitignore", ".github/**"]
readme = "README.md"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[example]]
crate-type = ["cdylib"]
path = "rust/examples/vsstest.rs"
name = "vsstest"

[[test]]
path = "rust/tests/demo.rs"
name = "demo"

[[test]]
path = "rust/tests/integration_usearch.rs"
name = "usearch"

[[test]]
path = "rust/tests/integration_hnsw.rs"
name = "hnsw"

[dependencies]
redis-module = { version = "2.0.5", features = ["default"] }
#usearch = "2.6.0"
usearch = { version = "2.6.0", path = "./deps/usearch" }
faiss = { version = "0.12.1" }
hnsw_rs = "0.2.0"
cpu-time = { version = "1.0" }
rand = { version = "0.8" }

[dev-dependencies]
anyhow = "1"
redis = "0.23"
redis-module = { version = "2.0.5", features = ["default"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
[dev-dependencies.regex]
version = "1.3"
default-features = false
# Unless you have a specific reason not to, it's good sense to enable standard
# library support. It enables several optimizations and avoids spin locks. It
# also shouldn't meaningfully impact compile times or binary size.
features = ["std"]


[workspace]
members = [
    "rust/usearch",
    "rust/faiss",
    "rust/hnsw/hnswcore",
    "rust/hnsw",
    "deps/usearch",
]

[workspace.dependencies]
criterion = { version = "0.5", features = ["async", "async_tokio"] }

[workspace.package]
edition = "2021"
publish = ["git"]
license = "MIT"
exclude = [".gitignore", ".github/**"]
repository = "https://github.com/weedge/redisxann"

[profile.release]
#debug = 1
#opt-level = "z"     # Optimize for size.
#lto = true          # Enable Link Time Optimization
#codegen-units = 1   # Reduce number of codegen units to increase optimizations.
#panic = "abort"     # Abort on panic
#strip = true        # Automatically strip symbols from the binary.
